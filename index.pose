(section "3.8" "The Evaluation and Compilation Dictionary")

(the symbol lambda)
(the macro lambda)
(the function compile)
(the function eval)
(the (special operator) eval-when)
(the (special operator) load-time-value)
(the (special operator) quote)
(the accessor compiler-macro-function)
(the macro define-compiler-macro)
(the macro defmacro)
(the accessor macro-function)
(the function macroexpand)
(the function macroexpand-1)
(the macro define-symbol-macro)
(the (special operator) symbol-macrolet)
(the variable *macroexpand-hook*)
(the function proclaim)
(the macro declaim)
(the symbol declare)
(the declaration ignore)
(the declaration ignorable)
(the declaration dynamic-extent)
(the declaration type)
(the declaration inline)
(the declaration notinline)
(the declaration ftype)
(the declaration declaration)
(the declaration optimize)
(the declaration special)
(the (special operator) locally)
(the (special operator) the)
(the function special-operator-p)
(the function constantp)

(section "4.4" "The Types and Classes Dictionary")

(the type nil)
(the type boolean)
(the (system class) function)
(the type compiled-function)
(the (system class) generic-function)
(the (system class) standard-generic-function)
(the (system class) class)
(the (system class) built-in-class)
(the (system class) structure-class)
(the (system class) standard-class)
(the (system class) method)
(the (system class) standard-method)
(the class structure-object)
(the class standard-object)
(the (system class) method-combination)
(the (system class) t)
(the (type specifier) satisfies)
(the (type specifier) member)
(the (type specifier) not)
(the (type specifier) and)
(the (type specifier) or)
(the (type specifier) values)
(the (type specifier) eql)
(the function coerce)
(the macro deftype)
(the function subtypep)
(the function type-of)
(the function typep)
(the (condition type) type-error)
(the function type-error-datum)
(the function type-error-expected-type)
(the (condition type) simple-type-error)

(section "5.3" "The Data and Control Flow Dictionary")

(the function apply)
(the macro defun)
(the accessor fdefinition)
(the function fboundp)
(the function fmakunbound)
(the (special operator) flet)
(the (special operator) labels)
(the (special operator) macrolet)
(the function funcall)
(the (special operator) function)
(the function function-lambda-expression)
(the function functionp)
(the function compiled-function-p)
(the (constant variable) call-arguments-limit)
(the (constant variable) lambda-list-keywords)
(the (constant variable) lambda-parameters-limit)
(the macro defconstant)
(the macro defparameter)
(the macro defvar)
(the macro destructuring-bind)
(the (special operator) let)
(the (special operator) let*)
(the (special operator) progv)
(the (special form) setq)
(the macro psetq)
(the (special operator) block)
(the (special operator) catch)
(the (special operator) go)
(the (special operator) return-from)
(the macro return)
(the (special operator) tagbody)
(the (special operator) throw)
(the (special operator) unwind-protect)
(the (constant variable) nil)
(the function not)
(the (constant variable) t)
(the function eq)
(the function eql)
(the function equal)
(the function equalp)
(the function identity)
(the function complement)
(the function constantly)
(the function every)
(the function some)
(the function notevery)
(the function notany)
(the macro and)
(the macro cond)
(the (special operator) if)
(the macro or)
(the macro when)
(the macro unless)
(the macro case)
(the macro ccase)
(the macro ecase)
(the macro typecase)
(the macro ctypecase)
(the macro etypecase)
(the macro multiple-value-bind)
(the (special operator) multiple-value-call)
(the macro multiple-value-list)
(the (special operator) multiple-value-prog1)
(the macro multiple-value-setq)
(the accessor values)
(the function values-list)
(the (constant variable) multiple-values-limit)
(the macro nth-value)
(the macro prog)
(the macro prog*)
(the macro prog1)
(the macro prog2)
(the (special operator) progn)
(the macro define-modify-macro)
(the macro defsetf)
(the macro define-setf-expander)
(the function get-setf-expansion)
(the macro setf)
(the macro psetf)
(the macro shiftf)
(the macro rotatef)
(the (condition type) control-error)
(the (condition type) program-error)
(the (condition type) undefined-function)

(section "6.2" "The Iteration Dictionary")

(the macro do)
(the macro do*)
(the macro dotimes)
(the macro dolist)
(the macro loop)
(the (local macro) loop-finish)

(section "7.7" "The Objects Dictionary")

(the (standard generic function) function-keywords)
(the function ensure-generic-function)
(the (standard generic function) allocate-instance)
(the (standard generic function) reinitialize-instance)
(the (standard generic function) shared-initialize)
(the (standard generic function) update-instance-for-different-class)
(the (standard generic function) update-instance-for-redefined-class)
(the (standard generic function) change-class)
(the function slot-boundp)
(the function slot-exists-p)
(the function slot-makunbound)
(the (standard generic function) slot-missing)
(the (standard generic function) slot-unbound)
(the function slot-value)
(the (standard generic function) method-qualifiers)
(the (standard generic function) no-applicable-method)
(the (standard generic function) no-next-method)
(the (standard generic function) remove-method)
(the (standard generic function) make-instance)
(the (standard generic function) make-instances-obsolete)
(the (standard generic function) make-load-form)
(the function make-load-form-saving-slots)
(the macro with-accessors)
(the macro with-slots)
(the macro defclass)
(the macro defgeneric)
(the macro defmethod)
(the accessor find-class)
(the (local function) next-method-p)
(the (local macro) call-method)
(the (local macro) make-method)
(the (local function) call-next-method)
(the (standard generic function) compute-applicable-methods)
(the macro define-method-combination)
(the (standard generic function) find-method)
(the (standard generic function) add-method)
(the (standard generic function) initialize-instance)
(the (standard generic function) class-name)
(the (standard generic function) (setf class-name))
(the function class-of)
(the condition type unbound-slot)
(the function unbound-slot-instance)

(section "8.1" "The Structures Dictionary")

(the macro defstruct)
(the function copy-structure)

(section "9.2" "The Conditions Dictionary")

(the (condition type) condition)
(the (condition type) warning)
(the (condition type) style-warning)
(the (condition type) serious-condition)
(the (condition type) error)
(the (condition type) cell-error)
(the function cell-error-name)
(the (condition type) parse-error)
(the (condition type) storage-condition)
(the macro assert)
(the function error)
(the function cerror)
(the macro check-type)
(the (condition type) simple-error)
(the function invalid-method-error)
(the function method-combination-error)
(the function signal)
(the (condition type) simple-condition)
(the function simple-condition-format-control)
(the function simple-condition-format-arguments)
(the function warn)
(the (condition type) simple-warning)
(the function invoke-debugger)
(the function break)
(the variable *debugger-hook*)
(the variable *break-on-signals*)
(the macro handler-bind)
(the macro handler-case)
(the macro ignore-errors)
(the macro define-condition)
(the function make-condition)
(the (system class) restart)
(the function compute-restarts)
(the function find-restart)
(the function invoke-restart)
(the function invoke-restart-interactively)
(the macro restart-bind)
(the macro restart-case)
(the function restart-name)
(the macro with-condition-restarts)
(the macro with-simple-restart)
(the restart abort)
(the restart continue)
(the restart muffle-warning)
(the restart store-value)
(the restart use-value)
(the function abort)
(the function continue)
(the function muffle-warning)
(the function store-value)
(the function use-value)

(section "10.2" "The Symbols Dictionary")

(the (system class) symbol)
(the type keyword)
(the function symbolp)
(the function keywordp)
(the function make-symbol)
(the function copy-symbol)
(the function gensym)
(the variable *gensym-counter*)
(the function gentemp)
(the accessor symbol-function)
(the function symbol-name)
(the function symbol-package)
(the accessor symbol-plist)
(the accessor symbol-value)
(the accessor get)
(the function remprop)
(the function boundp)
(the function makunbound)
(the function set)
(the (condition type) unbound-variable)

(section "11.2" "The Packages Dictionary")

(the (system class) package)
(the function export)
(the function find-symbol)
(the function find-package)
(the function find-all-symbols)
(the function import)
(the function list-all-packages)
(the function rename-package)
(the function shadow)
(the function shadowing-import)
(the function delete-package)
(the function make-package)
(the macro with-package-iterator)
(the function unexport)
(the function unintern)
(the macro in-package)
(the function unuse-package)
(the function use-package)
(the macro defpackage)
(the macro do-symbols)
(the macro do-external-symbols)
(the macro do-all-symbols)
(the function intern)
(the function package-name)
(the function package-nicknames)
(the function package-shadowing-symbols)
(the function package-use-list)
(the function package-used-by-list)
(the function packagep)
(the variable *package*)
(the (condition type) package-error)
(the function package-error-package)

(section "12.2" "The Numbers Dictionary")

(the (system class) number)
(the (system class) complex)
(the (system class) real)
(the (system class) float)
(the type short-float)
(the type single-float)
(the type double-float)
(the type long-float)
(the (system class) rational)
(the (system class) ratio)
(the (system class) integer)
(the type signed-byte)
(the type unsigned-byte)
(the (type specifier) mod)
(the type bit)
(the type fixnum)
(the type bignum)
(the function =)
(the function /=)
(the function <)
(the function >)
(the function <=)
(the function >=)
(the function max)
(the function min)
(the function minusp)
(the function plusp)
(the function zerop)
(the function floor)
(the function ffloor)
(the function ceiling)
(the function fceiling)
(the function truncate)
(the function ftruncate)
(the function round)
(the function fround)
(the function sin)
(the function cos)
(the function tan)
(the function asin)
(the function acos)
(the function atan)
(the (constant variable) pi)
(the function sinh)
(the function cosh)
(the function tanh)
(the function asinh)
(the function acosh)
(the function atanh)
(the function *)
(the function +)
(the function -)
(the function /)
(the function 1+)
(the function 1-)
(the function abs)
(the function evenp)
(the function oddp)
(the function exp)
(the function expt)
(the function gcd)
(the macro incf)
(the function decf)
(the function lcm)
(the function log)
(the function mod)
(the function rem)
(the function signum)
(the function sqrt)
(the function isqrt)
(the (system class) random-state)
(the function make-random-state)
(the function random)
(the function random-state-p)
(the variable *random-state*)
(the function numberp)
(the function cis)
(the function complex)
(the function complexp)
(the function conjugate)
(the function phase)
(the function realpart)
(the function imagpart)
(the function upgraded-complex-part-type)
(the function realp)
(the function numerator)
(the function denominator)
(the function rational)
(the function rationalize)
(the function rationalp)
(the function ash)
(the function integer-length)
(the function integerp)
(the function parse-integer)
(the function boole)
(the (constant variable) boole-1)
(the (constant variable) boole-2)
(the (constant variable) boole-and)
(the (constant variable) boole-andc1)
(the (constant variable) boole-andc2)
(the (constant variable) boole-c1)
(the (constant variable) boole-c2)
(the (constant variable) boole-clr)
(the (constant variable) boole-eqv)
(the (constant variable) boole-ior)
(the (constant variable) boole-nand)
(the (constant variable) boole-nor)
(the (constant variable) boole-orc1)
(the (constant variable) boole-orc2)
(the (constant variable) boole-set)
(the (constant variable) boole-xor)
(the function logand)
(the function logandc1)
(the function logandc2)
(the function logeqv)
(the function logior)
(the function lognand)
(the function lognor)
(the function lognot)
(the function logorc1)
(the function logorc2)
(the function logxor)
(the function logbitp)
(the function logcount)
(the function logtest)
(the function byte)
(the function byte-size)
(the function byte-position)
(the function deposit-field)
(the function dpb)
(the accessor ldb)
(the function ldb-test)
(the accessor mask-field)
(the (constant variable) most-positive-fixnum)
(the (constant variable) most-negative-fixnum)
(the function decode-float)
(the function scale-float)
(the function float-radix)
(the function float-sign)
(the function float-digits)
(the function float-precision)
(the function integer-decode-float)
(the function float)
(the function floatp)
(the (constant variable) most-positive-short-float)
(the (constant variable) least-positive-short-float)
(the (constant variable) least-positive-normalized-short-float)
(the (constant variable) most-positive-double-float)
(the (constant variable) least-positive-double-float)
(the (constant variable) least-positive-normalized-double-float)
(the (constant variable) most-positive-long-float)
(the (constant variable) least-positive-long-float)
(the (constant variable) least-positive-normalized-long-float)
(the (constant variable) most-positive-single-float)
(the (constant variable) least-positive-single-float)
(the (constant variable) least-positive-normalized-single-float)
(the (constant variable) most-negative-short-float)
(the (constant variable) least-negative-short-float)
(the (constant variable) least-negative-normalized-short-float)
(the (constant variable) most-negative-single-float)
(the (constant variable) least-negative-single-float)
(the (constant variable) least-negative-normalized-single-float)
(the (constant variable) most-negative-double-float)
(the (constant variable) least-negative-double-float)
(the (constant variable) least-negative-normalized-double-float)
(the (constant variable) most-negative-long-float)
(the (constant variable) least-negative-long-float)
(the (constant variable) least-negative-normalized-long-float)
(the (constant variable) short-float-epsilon)
(the (constant variable) short-float-negative-epsilon)
(the (constant variable) single-float-epsilon)
(the (constant variable) single-float-negative-epsilon)
(the (constant variable) double-float-epsilon)
(the (constant variable) double-float-negative-epsilon)
(the (constant variable) long-float-epsilon)
(the (constant variable) long-float-negative-epsilon)
(the (condition type) arithmetic-error)
(the function arithmetic-error-operands)
(the function arithmetic-error-operation)
(the (condition type) division-by-zero)
(the (condition type) floating-point-invalid-operation)
(the (condition type) floating-point-inexact)
(the (condition type) floating-point-overflow)
(the (condition type) floating-point-underflow)

(section "13.2" "The Characters Dictionary")

(the (system class) character)
(the type base-char)
(the type standard-char)
(the type extended-char)
(the function char=)
(the function char/=)
(the function char<)
(the function char>)
(the function char<=)
(the function char>=)
(the function char-equal)
(the function char-not-equal)
(the function char-lessp)
(the function char-greaterp)
(the function char-not-greaterp)
(the function char-not-lessp)
(the function character)
(the function characterp)
(the function alpha-char-p)
(the function alphanumericp)
(the function digit-char)
(the function digit-char-p)
(the function graphic-char-p)
(the function standard-char-p)
(the function char-upcase char-downcase)
(the function upper-case-p)
(the function lower-case-p)
(the function both-case-p)
(the function char-code)
(the function char-int)
(the function code-char)
(the (constant variable) char-code-limit)
(the function char-name)
(the function name-char)

(section "14.2" "The Conses Dictionary")

(the (system class) list)
(the (system class) null)
(the (system class) cons)
(the type atom)
(the function cons)
(the function consp)
(the function atom)
(the function rplaca)
(the function rplacd)
(the accessor car)
(the accessor cdr)
(the accessor caar)
(the accessor cadr)
(the accessor cdar)
(the accessor cddr)
(the accessor caaar)
(the accessor caadr)
(the accessor cadar)
(the accessor caddr)
(the accessor cdaar)
(the accessor cdadr)
(the accessor cddar)
(the accessor cdddr)
(the accessor caaaar)
(the accessor caaadr)
(the accessor caadar)
(the accessor caaddr)
(the accessor cadaar)
(the accessor cadadr)
(the accessor caddar)
(the accessor cadddr)
(the accessor cdaaar)
(the accessor cdaadr)
(the accessor cdadar)
(the accessor cdaddr)
(the accessor cddaar)
(the accessor cddadr)
(the accessor cdddar)
(the accessor cddddr)
(the function copy-tree)
(the function sublis)
(the function nsublis)
(the function subst)
(the function subst-if)
(the function subst-if-not)
(the function nsubst)
(the function nsubst-if)
(the function nsubst-if-not)
(the function tree-equal)
(the function copy-list)
(the function list)
(the function list*)
(the function list-length)
(the function listp)
(the function make-list)
(the macro push)
(the macro pop)
(the accessor first)
(the accessor second)
(the accessor third)
(the accessor fourth)
(the accessor fifth)
(the accessor sixth)
(the accessor seventh)
(the accessor eighth)
(the accessor ninth)
(the accessor tenth)
(the accessor nth)
(the function endp)
(the function null)
(the function nconc)
(the function append)
(the function revappend)
(the function nreconc)
(the function butlast)
(the function nbutlast)
(the function last)
(the function ldiff)
(the function tailp)
(the function nthcdr)
(the accessor rest)
(the function member)
(the function member-if)
(the function member-if-not)
(the function mapc)
(the function mapcar)
(the function mapcan)
(the function mapl)
(the function maplist)
(the function mapcon)
(the function acons)
(the function assoc)
(the function assoc-if)
(the function assoc-if-not)
(the function copy-alist)
(the function pairlis)
(the function rassoc)
(the function rassoc-if)
(the function rassoc-if-not)
(the function get-properties)
(the accessor getf)
(the macro remf)
(the function intersection)
(the function nintersection)
(the function adjoin)
(the macro pushnew)
(the function set-difference)
(the function nset-difference)
(the function set-exclusive-or)
(the function nset-exclusive-or)
(the function subsetp)
(the function union)
(the function nunion)

(section "15.2" "The Arrays Dictionary")

(the (system class) array)
(the type simple-array)
(the (system class) vector)
(the type simple-vector)
(the (system class) bit-vector)
(the type simple-bit-vector)
(the function make-array)
(the function adjust-array)
(the function adjustable-array-p)
(the accessor aref)
(the function array-dimension)
(the function array-dimensions)
(the function array-element-type)
(the function array-has-fill-pointer-p)
(the function array-displacement)
(the function array-in-bounds-p)
(the function array-rank)
(the function array-row-major-index)
(the function array-total-size)
(the function arrayp)
(the accessor fill-pointer)
(the accessor row-major-aref)
(the function upgraded-array-element-type)
(the constant variable array-dimension-limit)
(the constant variable array-rank-limit)
(the constant variable array-total-size-limit)
(the function simple-vector-p)
(the accessor svref)
(the function vector)
(the function vector-pop)
(the function vector-push)
(the function vector-push-extend)
(the function vectorp)
(the accessor bit)
(the accessor sbit)
(the function bit-and)
(the function bit-andc1)
(the function bit-andc2)
(the function bit-eqv)
(the function bit-ior)
(the function bit-nand)
(the function bit-nor)
(the function bit-not)
(the function bit-orc1)
(the function bit-orc2)
(the function bit-xor)
(the function bit-vector-p)
(the function simple-bit-vector-p)

(section "16.2" "The Strings Dictionary")

(the (system class) string)
(the type base-string)
(the type simple-string)
(the type simple-base-string)
(the function simple-string-p)
(the accessor char)
(the accessor schar)
(the function string)
(the function string-upcase)
(the function string-downcase)
(the function string-capitalize)
(the function nstring-upcase)
(the function nstring-downcase)
(the function nstring-capitalize)
(the function string-trim)
(the function string-left-trim)
(the function string-right-trim)
(the function string=)
(the function string/=)
(the function string<)
(the function string>)
(the function string<=)
(the function string>=)
(the function string-equal)
(the function string-not-equal)
(the function string-lessp)
(the function string-greaterp)
(the function string-not-greaterp)
(the function string-not-lessp)
(the function stringp)
(the function make-string)

(section "17.3" "The Sequences Dictionary")

(the (system class) sequence)
(the function copy-seq)
(the accessor elt)
(the function fill)
(the function make-sequence)
(the accessor subseq)
(the function map)
(the function map-into)
(the function reduce)
(the function count)
(the function count-if)
(the function count-if-not)
(the function length)
(the function reverse)
(the function nreverse)
(the function sort)
(the function stable-sort)
(the function find)
(the function find-if)
(the function find-if-not)
(the function position)
(the function position-if)
(the function position-if-not)
(the function search)
(the function mismatch)
(the function replace)
(the function substitute)
(the function substitute-if)
(the function substitute-if-not)
(the function nsubstitute)
(the function nsubstitute-if)
(the function nsubstitute-if-not)
(the function concatenate)
(the function merge)
(the function remove)
(the function remove-if)
(the function remove-if-not)
(the function delete)
(the function delete-if)
(the function delete-if-not)
(the function remove-duplicates)
(the function delete-duplicates)

(section "18.2" "The Hash Tables Dictionary")

(the (system class) hash-table)
(the function make-hash-table)
(the function hash-table-p)
(the function hash-table-count)
(the function hash-table-rehash-size)
(the function hash-table-rehash-threshold)
(the function hash-table-size)
(the function hash-table-test)
(the accessor gethash)
(the function remhash)
(the function maphash)
(the macro with-hash-table-iterator)
(the function clrhash)
(the function sxhash)

(section "19.4" "The Filenames Dictionary")

(the (system class) pathname)
(the (system class) logical-pathname)
(the function pathname)
(the function make-pathname)
(the function pathnamep)
(the function pathname-host)
(the function pathname-device)
(the function pathname-directory)
(the function pathname-name)
(the function pathname-type)
(the function pathname-version)
(the function load-logical-pathname-translations)
(the accessor logical-pathname-translations)
(the function logical-pathname)
(the variable *default-pathname-defaults*)
(the function namestring)
(the function file-namestring)
(the function directory-namestring)
(the function host-namestring)
(the function enough-namestring)
(the function parse-namestring)
(the function wild-pathname-p)
(the function pathname-match-p)
(the function translate-logical-pathname)
(the function translate-pathname)
(the function merge-pathnames)

(section "20.2" "The Files Dictionary")

(the function directory)
(the function probe-file)
(the function ensure-directories-exist)
(the function truename)
(the function file-author)
(the function file-write-date)
(the function rename-file)
(the function delete-file)
(the (condition type) file-error)
(the function file-error-pathname)

(section "21.2" "The Streams Dictionary")

(the (system class) stream)
(the (system class) broadcast-stream)
(the (system class) concatenated-stream)
(the (system class) echo-stream)
(the (system class) file-stream)
(the (system class) string-stream)
(the (system class) synonym-stream)
(the (system class) two-way-stream)
(the function input-stream-p)
(the function output-stream-p)
(the function interactive-stream-p)
(the function open-stream-p)
(the function stream-element-type)
(the function streamp)
(the function read-byte)
(the function write-byte)
(the function peek-char)
(the function read-char)
(the function read-char-no-hang)
(the function terpri)
(the function fresh-line)
(the function unread-char)
(the function write-char)
(the function read-line)
(the function write-string)
(the function write-line)
(the function read-sequence)
(the function write-sequence)
(the function file-length)
(the function file-position)
(the function file-string-length)
(the function open)
(the function stream-external-format)
(the macro with-open-file)
(the function close)
(the macro with-open-stream)
(the function listen)
(the function clear-input)
(the function finish-output)
(the function force-output)
(the function clear-output)
(the function y-or-n-p)
(the function yes-or-no-p)
(the function make-synonym-stream)
(the function synonym-stream-symbol)
(the function broadcast-stream-streams)
(the function make-broadcast-stream)
(the function make-two-way-stream)
(the function two-way-stream-input-stream)
(the function two-way-stream-output-stream)
(the function echo-stream-input-stream)
(the function echo-stream-output-stream)
(the function make-echo-stream)
(the function concatenated-stream-streams)
(the function make-concatenated-stream)
(the function get-output-stream-string)
(the function make-string-input-stream)
(the function make-string-output-stream)
(the macro with-input-from-string)
(the macro with-output-to-string)
(the variable *debug-io*)
(the variable *error-output*)
(the variable *query-io*)
(the variable *standard-input*)
(the variable *standard-output*)
(the variable *trace-output*)
(the variable *terminal-io*)
(the (condition type) stream-error)
(the function stream-error-stream)
(the (condition type) end-of-file)

(section "22.4" "The Printer Dictionary")

(the function copy-pprint-dispatch)
(the macro formatter)
(the function pprint-dispatch)
(the (local macro) pprint-exit-if-list-exhausted)
(the function pprint-fill)
(the function pprint-linear)
(the function pprint-tabular)
(the function pprint-indent)
(the macro pprint-logical-block)
(the function pprint-newline)
(the (local macro) pprint-pop)
(the function pprint-tab)
(the (standard generic function) print-object)
(the macro print-unreadable-object)
(the function set-pprint-dispatch)
(the function write)
(the function prin1)
(the function print)
(the function pprint)
(the function princ)
(the function write-to-string)
(the function prin1-to-string)
(the function princ-to-string)
(the variable *print-array*)
(the variable *print-base*)
(the variable *print-radix*)
(the variable *print-case*)
(the variable *print-circle*)
(the variable *print-escape*)
(the variable *print-gensym*)
(the variable *print-level*)
(the variable *print-length*)
(the variable *print-lines*)
(the variable *print-miser-width*)
(the variable *print-pprint-dispatch*)
(the variable *print-pretty*)
(the variable *print-readably*)
(the variable *print-right-margin*)
(the (condition type) print-not-readable)
(the function print-not-readable-object)
(the function format)

(section "23.2" "The Reader Dictionary")

(the (system class) readtable)
(the function copy-readtable)
(the function make-dispatch-macro-character)
(the function read)
(the function read-preserving-whitespace)
(the function read-delimited-list)
(the function read-from-string)
(the accessor readtable-case)
(the function readtablep)
(the function set-dispatch-macro-character)
(the function get-dispatch-macro-character)
(the function set-macro-character)
(the function get-macro-character)
(the function set-syntax-from-char)
(the macro with-standard-io-syntax)
(the variable *read-base*)
(the variable *read-default-float-format*)
(the variable *read-eval*)
(the variable *read-suppress*)
(the variable *readtable*)
(the (condition type) reader-error)

(section "24.2" "The System Construction Dictionary")

(the function compile-file)
(the function compile-file-pathname)
(the function load)
(the macro with-compilation-unit)
(the variable *features*)
(the variable *compile-file-pathname*)
(the variable *compile-file-truename*)
(the variable *load-pathname*)
(the variable *load-truename*)
(the variable *compile-print*)
(the variable *compile-verbose*)
(the variable *load-print*)
(the variable *load-verbose*)
(the variable *modules*)
(the function provide)
(the function require)

(section "25.2" "The Environment Dictionary")

(the function decode-universal-time)
(the function encode-universal-time)
(the function get-universal-time)
(the function get-decoded-time)
(the function sleep)
(the function apropos)
(the function apropos-list)
(the function describe)
(the (standard generic function) describe-object)
(the macro trace)
(the macro untrace)
(the macro step)
(the macro time)
(the (constant variable) internal-time-units-per-second)
(the function get-internal-real-time)
(the function get-internal-run-time)
(the function disassemble)
(the (standard generic function) documentation)
(the (standard generic function) (setf documentation))
(the function room)
(the function ed)
(the function inspect)
(the function dribble)
(the variable -)
(the variable +)
(the variable ++)
(the variable +++)
(the variable *)
(the variable **)
(the variable ***)
(the variable /)
(the variable //)
(the variable ///)
(the function lisp-implementation-type)
(the function lisp-implementation-version)
(the function short-site-name)
(the function long-site-name)
(the function machine-instance)
(the function machine-type)
(the function machine-version)
(the function software-type)
(the function software-version)
(the function user-homedir-pathname)
